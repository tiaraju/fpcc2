wss <- (nrow(scaled_capes[3:7]))*sum(apply(scaled_capes[3:7],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scaled_capes[3:7],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
k_means_result <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=median)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
pca_data <- prcomp(scaled_capes[3:7],center = TRUE)
scaled_capes <- data.frame(scaled_capes[3:7], k_means_result$cluster)
ppg.groups = scaled_capes[, 6]
pca_plot <- ggbiplot(pca_data, obs.scale = 1, var.scale = 1,
groups = ppg.groups, ellipse = TRUE,
circle = FALSE) +
scale_color_continuous(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(pca_plot)
View(teste)
require(tidyverse) # ggplot2, tidyr, dplyr, etc
require(broom) # facilita lidar com modelos e trata o resultado do kmeans como modelo
require(ggfortify, quietly = TRUE) # plots para modelos
require(GGally, quietly = TRUE)
require(knitr, quietly = TRUE)
require(cluster)
require(ggdendro)
require(corrplot)
require(reshape2)
require(plotly)
library(devtools)
library(ggbiplot)
signatures = read_csv("dados//signatures.csv")
signatures = signatures %>% mutate(features_mean=rowMeans(signatures[,3:12]))
# Determine number of clusters
wss <- (nrow(signatures[3:12]))*sum(apply(signatures[3:12],2,var))
for (i in 2:10) wss[i] <- sum(kmeans(signatures[3:12],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
for (i in 2:15) wss[i] <- sum(kmeans(signatures[3:12],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
k_means_result <- kmeans(signatures[3:12], centers = 3, nstart = 20)
aggregate(signatures[3:12],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[3:12], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
signatures %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
View(signatures)
signatures %>%
gather(key = "variavel", value = "valor", -appliance, -state) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[3:7] %>%
gather(key = "variavel", value = "valor", -appliance, -state) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[7:13] %>%
gather(key = "variavel", value = "valor", -appliance, -state) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[7:13] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures = read_csv("dados//signatures.csv")
signatures = signatures %>% mutate(features_mean=rowMeans(signatures[,3:12]))
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[7:13] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:13] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:13] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:13] %>%
signatures = read_csv("dados//signatures.csv")
signatures = signatures %>% mutate(features_mean=rowMeans(signatures[,3:12]))
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:13] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
max(signatures['m1'])
max(signatures['m10'])
signatures %>% summary(m1:m10)
to_check_sig = signatures %>% filter(m1 > 10000)
to_check_sig = signatures %>% filter(m1:m10 > 10000)
to_check_sig = signatures %>% filter(m1 > 10000|m2 > 10000|m3 > 10000|m4 > 10000|m5 > 10000|m6 > 10000|m7 > 10000|m8 > 10000|m9 > 10000|m10 > 10000)
View(to_check_sig)
to_check_sig = signatures %>% filter(m1 > 5000|m2 > 5000|m3 > 5000|m4 > 5000|m5 > 5000|m6 > 5000|m7 > 5000|m8 > 5000|m9 > 5000|m10 > 5000)
View(to_check_sig)
signatures %>% ddply(.(x), function(x){print(x)}
)
signatures %>% ddply(.(x), function(m1){print(x)}
)
signatures %>% ddply(.(m1), function(m1){print(x)}
)
signatures %>% ddply(.(m1), function(m1){print(m1)})
signatures$diff_1 = signatures$m2 - signatures$m1
View(signatures)
signatures = read_csv("dados//signatures.csv")
signatures = signatures %>% mutate(features_mean=rowMeans(signatures[,3:12]))
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:13] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures$diff_1 = signatures$m2 - signatures$m1
signatures$diff_2 = signatures$m3 - signatures$m1
signatures$diff_3 = signatures$m4 - signatures$m1
signatures$diff_4 = signatures$m5 - signatures$m1
signatures$diff_5 = signatures$m6 - signatures$m1
signatures$diff_6 = signatures$m7 - signatures$m1
signatures$diff_7 = signatures$m8 - signatures$m1
signatures$diff_8 = signatures$m9 - signatures$m1
signatures$diff_9 = signatures$m10 - signatures$m1
signatures = read_csv("dados//signatures.csv")
signatures = signatures %>% mutate(features_mean=rowMeans(signatures[,3:12]))
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:13] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures$diff_1 = signatures$m2 - signatures$m1
signatures$diff_2 = signatures$m3 - signatures$m1
signatures$diff_3 = signatures$m4 - signatures$m1
signatures$diff_4 = signatures$m5 - signatures$m1
signatures$diff_5 = signatures$m6 - signatures$m1
signatures$diff_6 = signatures$m7 - signatures$m1
signatures$diff_7 = signatures$m8 - signatures$m1
signatures$diff_8 = signatures$m9 - signatures$m1
signatures$diff_9 = signatures$m10 - signatures$m1
signatures = read_csv("dados//signatures.csv")
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:13] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
View(signatures)
signatures[8:12] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures = read_csv("dados//signatures.csv")
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:12] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures$diff_1 = signatures$m2 - signatures$m1
signatures$diff_2 = signatures$m3 - signatures$m1
signatures$diff_3 = signatures$m4 - signatures$m1
signatures$diff_4 = signatures$m5 - signatures$m1
signatures$diff_5 = signatures$m6 - signatures$m1
signatures$diff_6 = signatures$m7 - signatures$m1
signatures$diff_7 = signatures$m8 - signatures$m1
signatures$diff_8 = signatures$m9 - signatures$m1
signatures$diff_9 = signatures$m10 - signatures$m1
signatures[13:22] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[13:21] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures = read_csv("dados//signatures.csv")
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:12] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[13:17] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
```{r}
signatures = read_csv("dados//signatures.csv")
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures = read_csv("dados//signatures.csv")
signatures$diff_1 = signatures$m2 - signatures$m1
signatures$diff_2 = signatures$m3 - signatures$m1
signatures$diff_3 = signatures$m4 - signatures$m1
signatures$diff_4 = signatures$m5 - signatures$m1
signatures$diff_5 = signatures$m6 - signatures$m1
signatures$diff_6 = signatures$m7 - signatures$m1
signatures$diff_7 = signatures$m8 - signatures$m1
signatures$diff_8 = signatures$m9 - signatures$m1
signatures$diff_9 = signatures$m10 - signatures$m1
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:12] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[13:17] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[18:21] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
# Determine number of clusters
wss <- (nrow(signatures[13:21]))*sum(apply(signatures[13:21],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(signatures[13:21],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# Determine number of clusters
wss <- (nrow(signatures[13:21]))*sum(apply(signatures[13:21],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(signatures[13:21],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
wss <- (nrow(signatures[13:22]))*sum(apply(signatures[13:21],2,var))
# Determine number of clusters
wss <- (nrow(signatures[13:21]))*sum(apply(signatures[13:21],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(signatures[13:21],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
k_means_result <- kmeans(signatures[13:21], centers = 3, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 14, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
# Determine number of clusters
wss <- (nrow(signatures[13:21]))*sum(apply(signatures[13:21],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(signatures[13:21],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
# Determine number of clusters
wss <- (nrow(signatures[13:21]))*sum(apply(signatures[13:21],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(signatures[13:21],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
k_means_result <- kmeans(signatures[13:21], centers = 3, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 3, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 3, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
require(tidyverse) # ggplot2, tidyr, dplyr, etc
require(broom) # facilita lidar com modelos e trata o resultado do kmeans como modelo
require(ggfortify, quietly = TRUE) # plots para modelos
require(GGally, quietly = TRUE)
require(knitr, quietly = TRUE)
require(cluster)
require(ggdendro)
require(corrplot)
require(reshape2)
require(plotly)
library(devtools)
library(ggbiplot)
signatures = read_csv("dados//signatures.csv")
signatures$diff_1 = signatures$m2 - signatures$m1
signatures$diff_2 = signatures$m3 - signatures$m1
signatures$diff_3 = signatures$m4 - signatures$m1
signatures$diff_4 = signatures$m5 - signatures$m1
signatures$diff_5 = signatures$m6 - signatures$m1
signatures$diff_6 = signatures$m7 - signatures$m1
signatures$diff_7 = signatures$m8 - signatures$m1
signatures$diff_8 = signatures$m9 - signatures$m1
signatures$diff_9 = signatures$m10 - signatures$m1
signatures[3:7] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[8:12] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[13:17] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
signatures[18:21] %>%
gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = log(valor))) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
# Determine number of clusters
wss <- (nrow(signatures[13:21]))*sum(apply(signatures[13:21],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(signatures[13:21],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
k_means_result <- kmeans(signatures[13:21], centers = 4, nstart = 20)
aggregate(signatures[13:21],by=list(k_means_result$cluster),FUN=mean)
grouped_signatures <- data.frame(signatures[13:21], k_means_result$cluster)
clusplot(grouped_signatures, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
grouped_signatures$.row <- rownames(grouped_signatures)
teste <- melt(grouped_signatures, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
