facet_grid(. ~ variavel, scales = "free_x")
capes[24:31] %>% gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
capes$Teses[is.na(capes$Teses)] = 0
capes$Dissertacoes[is.na(capes$Dissertacoes)] = 0
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1, periodicos_A2)
filtered_capes %>% select() %>% ggpairs(size = .5,
lower = list(continuous = wrap("points", size = .5, alpha = 0.3)))
filtered_capes %>% select() %>% ggpairs(size = .5,
lower = list(continuous = wrap("points", size = .5, alpha = 0.3)))
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1, periodicos_A2)
capes = read_csv("dados//capes-cacc.csv")
capes[0:10] %>% gather(key = "variavel", value = "valor", -Sigla, -`Tem doutorado`, -Instituição, -Programa) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
capes[10:17] %>% gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
capes[17:24] %>% gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
capes[24:31] %>% gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
capes$Teses[is.na(capes$Teses)] = 0
capes$Dissertacoes[is.na(capes$Dissertacoes)] = 0
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1)
View(filtered_capes)
cor(filtered_capes %>% select(-Programa, -Sigla)) %>% corrplot(method = "number", type = "lower")
View(filtered_capes)
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1) %>% mutate_at(vars(`Nível`:periodicos_A1), funs(as.numeric(scale(.))))
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1) %>% mutate_at(vars(`Nível`:periodicos_A1), funs(as.numeric(scale(.))))
```{r}
scaled_capes = filtered_capes %>% mutate_at(vars(`Nível`:periodicos_A1), funs(as.numeric(scale(.))))
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1)
cor(filtered_capes %>% select(-Programa, -Sigla)) %>% corrplot(method = "number", type = "lower")
for (i in 2:15) wss[i] <- sum(kmeans(ppg_scaled[3:9],
centers=i)$withinss)
wss <- (nrow(scaled_capes[3:9])-1)*sum(apply(scaled_capes[3:9],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ppg_scaled[3:9],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
wss <- (nrow(scaled_capes[3:9])-1)*sum(apply(scaled_capes[3:9],2,var))
View(scaled_capes)
wss <- (nrow(scaled_capes[2:6])-1)*sum(apply(scaled_capes[3:9],2,var))
wss <- (nrow(scaled_capes[2:6])-1)*sum(apply(scaled_capes[2:6],2,var))
wss <- (nrow(scaled_capes[2:6])-1)*sum(apply(scaled_capes[2:6],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(ppg_scaled[2:6],
centers=i)$withinss)
wss <- (nrow(scaled_capes[2:6])-1)*sum(apply(scaled_capes[2:6],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scaled_capes[2:6],
centers=i)$withinss)
View(filtered_capes)
set.seed(123)
explorando_k = tibble(k = 3:15) %>%
group_by(k) %>%
do(
kmeans(select(scaled_capes, -Sigla, -Programa),
centers = .$k,
nstart = 20) %>% glance()
)
explorando_k %>%
ggplot(aes(x = k, y = tot.withinss)) +
geom_line() +
geom_point()
fit <- kmeans(scaled_capes[2:6], centers = 3, nstart = 20) # 3 cluster solution
fit <- kmeans(scaled_capes[2:7], centers = 3, nstart = 20) # 3 cluster solution
fit <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20) # 3 cluster solution
scaled_capes[2]
scaled_capes[6]
scaled_capes[7]
scaled_capes[8]
fit <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20) # 3 cluster solution
aggregate(scaled_capes[3:7],by=list(fit$cluster),FUN=mean)
scaled_capes <- data.frame(scaled_capes[3:7], fit$cluster)
library(cluster)
clusplot(scaled_capes, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
library(fpc)
install.packages('fpc')
library(fpc)
install.packages('flexmix')
install.packages('lazy')
flexmix
install.packages('flexmix')
library(fpc)
fpc
install.packages('fpc')
install.packages('flexmix')
library(fpc)
install.packages('lme4')
flexmix
install.packages('flexmix')
install.packages('fpc')
library(fpc)
plotcluster(scaled_capes, fit$cluster)
clusplot(scaled_capes, fit$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20) # 3 cluster solution
k_means_result <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20) # 3 cluster solution
k_means_result <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20) # 3 cluster solution
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1)
scaled_capes = filtered_capes %>% mutate_at(vars(`Nível`:periodicos_A1), funs(as.numeric(scale(.))))
k_means_result <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20) # 3 cluster solution
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=mean)
scaled_capes <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1)
scaled_capes = filtered_capes %>% mutate_at(vars(`Nível`:periodicos_A1), funs(as.numeric(scale(.))))
k_means_result <- kmeans(scaled_capes[3:7], centers = 8, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(scaled_capes[3:7], centers = 7, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(scaled_capes[3:7], centers = 10, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(scaled_capes[3:7], centers = 8, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=mean)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(scaled_capes[3:7], centers = 8, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=median)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(scaled_capes[3:7], centers = 8, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=median)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
capes[0:10] %>% gather(key = "variavel", value = "valor", -Sigla, -`Tem doutorado`, -Instituição, -Programa) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_grid(. ~ variavel, scales = "free_x")
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=3, lines=0)
2
k_means_result <- kmeans(scaled_capes[3:7], centers = 8, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=median)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
scaled_capes$.row <- rownames(scaled_capes)
teste <- melt(scaled_capes, id = c(".row", "fit.cluster") )
require(reshape2)
scaled_capes$.row <- rownames(scaled_capes)
teste <- melt(scaled_capes, id = c(".row", "fit.cluster") )
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "fit.cluster") )
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = fit.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ fit.cluster)
ggplotly(parallel_plot)
require(plotly)
require(plotly)
install.packages('plotly')
require(plotly)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = fit.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ fit.cluster)
ggplotly(parallel_plot)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
require(tidyverse) # ggplot2, tidyr, dplyr, etc
require(broom) # facilita lidar com modelos e trata o resultado do kmeans como modelo
require(ggfortify, quietly = TRUE) # plots para modelos
require(GGally, quietly = TRUE)
require(knitr, quietly = TRUE)
require(cluster)
require(ggdendro)
require(corrplot)
require(reshape2)
require(plotly)
library(devtools)
install.packages("devtools")
require(tidyverse) # ggplot2, tidyr, dplyr, etc
require(tidyverse) # ggplot2, tidyr, dplyr, etc
require(broom) # facilita lidar com modelos e trata o resultado do kmeans como modelo
require(ggfortify, quietly = TRUE) # plots para modelos
require(GGally, quietly = TRUE)
require(knitr, quietly = TRUE)
require(cluster)
require(ggdendro)
require(corrplot)
require(reshape2)
require(plotly)
library(devtools)
library(ggbiplot)
library(ggbiplot)
install_github("ggbiplot", "vqv")
library(ggbiplot)
capes = read_csv("dados//capes-cacc.csv")
capes[0:18] %>% gather(key = "variavel", value = "valor", -Sigla, -`Tem doutorado`, -Instituição, -Programa) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes[0:18] %>% gather(key = "variavel", value = "valor", -Sigla, -`Tem doutorado`, -Instituição, -Programa) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes[18:31] %>% gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes[18:31] %>% gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes$Teses[is.na(capes$Teses)] = 0
capes$Teses[is.na(capes$Teses)] = 0
capes$Dissertacoes[is.na(capes$Dissertacoes)] = 0
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1)
scaled_capes = filtered_capes %>% mutate_at(vars(`Nível`:periodicos_A1), funs(as.numeric(scale(.))))
capes = read_csv("dados//capes-cacc.csv")
capes[0:18] %>% gather(key = "variavel", value = "valor", -Sigla, -`Tem doutorado`, -Instituição, -Programa) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes[18:31] %>% gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes$Teses[is.na(capes$Teses)] = 0
capes$Dissertacoes[is.na(capes$Dissertacoes)] = 0
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1)
scaled_capes = filtered_capes %>% mutate_at(vars(`Nível`:periodicos_A1), funs(as.numeric(scale(.))))
cor(filtered_capes %>% select(-Programa, -Sigla)) %>% corrplot(method = "number", type = "lower")
wss <- (nrow(scaled_capes[3:7])-1)*sum(apply(scaled_capes[3:7],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scaled_capes[3:7],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(123)
explorando_k = tibble(k = 3:15) %>%
group_by(k) %>%
do(
kmeans(select(scaled_capes, -Sigla, -Programa),
centers = .$k,
nstart = 20) %>% glance()
)
explorando_k %>%
ggplot(aes(x = k, y = tot.withinss)) +
geom_line() +
geom_point()
# Determine number of clusters
wss <- (nrow(scaled_capes[3:7])-1)*sum(apply(scaled_capes[3:7],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scaled_capes[3:7],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(123)
explorando_k = tibble(k = 3:15) %>%
group_by(k) %>%
do(
kmeans(select(scaled_capes, -Sigla, -Programa),
centers = .$k,
nstart = 20) %>% glance()
)
explorando_k %>%
ggplot(aes(x = k, y = tot.withinss)) +
geom_line() +
geom_point()
wss <- (nrow(scaled_capes[3:8])-1)*sum(apply(scaled_capes[3:8],2,var))
wss <- (nrow(scaled_capes[3:7]))*sum(apply(scaled_capes[3:7],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scaled_capes[3:7],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
set.seed(123)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
k_means_result <- kmeans(scaled_capes[3:7], centers = 8, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=median)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
k_means_result <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20)
k_means_result <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=median)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
ppg.pca <- prcomp(scaled_capes[3:7],center = TRUE)
print(ppg.pca)
plot(ppg.pca, type = "l")
ppg.pca <- prcomp(scaled_capes[1:7],center = TRUE)
ppg.pca <- prcomp(scaled_capes[3:7],center = TRUE)
print(ppg.pca)
plot(ppg.pca, type = "l")
ppg.groups = scaled_capes[3, 7] #fit.cluster column
pca_plot <- ggbiplot(ppg.pca, obs.scale = 1, var.scale = 1,
groups = ppg.groups, ellipse = TRUE,
circle = FALSE) +
scale_color_continuous(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
scaled_capes[3, 7]
ppg.groups = scaled_capes[3:7] #fit.cluster column
pca_plot <- ggbiplot(pca_data, obs.scale = 1, var.scale = 1,
groups = ppg.groups, ellipse = TRUE,
circle = FALSE) +
scale_color_continuous(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
pca_data <- prcomp(scaled_capes[3:7],center = TRUE)
print(pca_data)
plot(pca_data, type = "l")
ppg.groups = scaled_capes[3:7] #fit.cluster column
pca_plot <- ggbiplot(pca_data, obs.scale = 1, var.scale = 1,
groups = ppg.groups, ellipse = TRUE,
circle = FALSE) +
scale_color_continuous(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
ppg.groups = scaled_capes[,7] #fit.cluster column
pca_plot <- ggbiplot(pca_data, obs.scale = 1, var.scale = 1,
groups = ppg.groups, ellipse = TRUE,
circle = FALSE) +
scale_color_continuous(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
ppg.groups = scaled_capes[, 7] #fit.cluster column
pca_plot <- ggbiplot(pca_data, obs.scale = 1, var.scale = 1,
groups = ppg.groups, ellipse = TRUE,
circle = FALSE) +
scale_color_continuous(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
scaled_capes <- data.frame(scaled_capes[3:7], k_means_result$cluster)
ppg.groups = scaled_capes[, 7] #fit.cluster column
ppg.groups = scaled_capes[, 6] #fit.cluster column
pca_plot <- ggbiplot(pca_data, obs.scale = 1, var.scale = 1,
groups = ppg.groups, ellipse = TRUE,
circle = FALSE) +
scale_color_continuous(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(pca_plot)
ppg.groups = scaled_capes[, 7]
require(tidyverse) # ggplot2, tidyr, dplyr, etc
require(broom) # facilita lidar com modelos e trata o resultado do kmeans como modelo
require(ggfortify, quietly = TRUE) # plots para modelos
require(GGally, quietly = TRUE)
require(knitr, quietly = TRUE)
require(cluster)
require(ggdendro)
require(corrplot)
require(reshape2)
require(plotly)
library(devtools)
library(ggbiplot)
capes = read_csv("dados//capes-cacc.csv")
capes[0:18] %>% gather(key = "variavel", value = "valor", -Sigla, -`Tem doutorado`, -Instituição, -Programa) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes[18:31] %>% gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes$Teses[is.na(capes$Teses)] = 0
capes$Dissertacoes[is.na(capes$Dissertacoes)] = 0
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1)
scaled_capes = filtered_capes %>% mutate_at(vars(`Nível`:periodicos_A1), funs(as.numeric(scale(.))))
cor(filtered_capes %>% select(-Programa, -Sigla)) %>% corrplot(method = "number", type = "lower")
# Determine number of clusters
wss <- (nrow(scaled_capes[3:7]))*sum(apply(scaled_capes[3:7],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scaled_capes[3:7],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
k_means_result <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=median)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
pca_data <- prcomp(scaled_capes[3:7],center = TRUE)
print(pca_data)
plot(pca_data, type = "l")
scaled_capes <- data.frame(scaled_capes[3:7], k_means_result$cluster)
ppg.groups = scaled_capes[, 6]
pca_plot <- ggbiplot(pca_data, obs.scale = 1, var.scale = 1,
groups = ppg.groups, ellipse = TRUE,
circle = FALSE) +
scale_color_continuous(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(pca_plot)
require(tidyverse) # ggplot2, tidyr, dplyr, etc
require(broom) # facilita lidar com modelos e trata o resultado do kmeans como modelo
require(ggfortify, quietly = TRUE) # plots para modelos
require(GGally, quietly = TRUE)
require(knitr, quietly = TRUE)
require(cluster)
require(ggdendro)
require(corrplot)
require(reshape2)
require(plotly)
library(devtools)
library(ggbiplot)
capes = read_csv("dados//capes-cacc.csv")
capes[0:18] %>% gather(key = "variavel", value = "valor", -Sigla, -`Tem doutorado`, -Instituição, -Programa) %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes[18:31] %>% gather(key = "variavel", value = "valor") %>%
ggplot(aes(x = valor)) +
theme(axis.text.x = element_text(angle = 45, hjust = 1)) +
geom_histogram(fill = "lightyellow", color = "black", bins = 20) +
facet_wrap(~ variavel, scales = "free_x", ncol=7)
capes$Teses[is.na(capes$Teses)] = 0
capes$Dissertacoes[is.na(capes$Dissertacoes)] = 0
filtered_capes =  capes %>% mutate(docentes=`Docentes permanentes`+`Docentes colaboradores`+`Docentes visitantes`, trabalhos_produzidos=Teses+Dissertacoes) %>%
select(Sigla, Programa, `Nível`, docentes, `Artigos em conf`, trabalhos_produzidos, periodicos_A1)
scaled_capes = filtered_capes %>% mutate_at(vars(`Nível`:periodicos_A1), funs(as.numeric(scale(.))))
cor(filtered_capes %>% select(-Programa, -Sigla)) %>% corrplot(method = "number", type = "lower")
# Determine number of clusters
wss <- (nrow(scaled_capes[3:7]))*sum(apply(scaled_capes[3:7],2,var))
for (i in 2:15) wss[i] <- sum(kmeans(scaled_capes[3:7],
centers=i)$withinss)
plot(1:15, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")
k_means_result <- kmeans(scaled_capes[3:7], centers = 3, nstart = 20)
aggregate(scaled_capes[3:7],by=list(k_means_result$cluster),FUN=median)
scaled_capes_cluster <- data.frame(scaled_capes[3:7], k_means_result$cluster)
clusplot(scaled_capes_cluster, k_means_result$cluster, color=TRUE, shade=TRUE,
labels=2, lines=0)
scaled_capes_cluster$.row <- rownames(scaled_capes_cluster)
teste <- melt(scaled_capes_cluster, id = c(".row", "k_means_result.cluster") )
parallel_plot = ggplot(teste, aes(x = variable, y = value, group = .row, colour = k_means_result.cluster)) +
theme(axis.text.x = element_text(angle = 45, hjust = 0)) +
geom_line(alpha = .2) +
facet_wrap(~ k_means_result.cluster)
ggplotly(parallel_plot)
pca_data <- prcomp(scaled_capes[3:7],center = TRUE)
scaled_capes <- data.frame(scaled_capes[3:7], k_means_result$cluster)
ppg.groups = scaled_capes[, 6]
pca_plot <- ggbiplot(pca_data, obs.scale = 1, var.scale = 1,
groups = ppg.groups, ellipse = TRUE,
circle = FALSE) +
scale_color_continuous(name = '') +
theme(legend.direction = 'horizontal',
legend.position = 'top')
print(pca_plot)
